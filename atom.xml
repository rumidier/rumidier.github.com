<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Meadows of wild horses]]></title>
  <link href="http://rumidier.github.com/atom.xml" rel="self"/>
  <link href="http://rumidier.github.com/"/>
  <updated>2012-07-24T14:27:02+09:00</updated>
  <id>http://rumidier.github.com/</id>
  <author>
    <name><![CDATA[rumidier]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Don-Change-space]]></title>
    <link href="http://rumidier.github.com/blog/2012/07/24/don-change-space/"/>
    <updated>2012-07-24T14:20:00+09:00</updated>
    <id>http://rumidier.github.com/blog/2012/07/24/don-change-space</id>
    <content type="html"><![CDATA[<h2>Sil::Web::Don 변경</h2>

<p>Sil::Schema는 Sil의 공용 스키마가 아닌데도 불구 하고 그렇게 보일수도 있는
상태 이다 이를 바꾸기 위해서
Sil::Don::Schema로 바꾼다. 이는 Sil의 Don만의 스키마라고
명시 해주는것과 같다.</p>

<p>변경전</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>lib
</span><span class='line'>`-- Sil
</span><span class='line'>    |-- Schema
</span><span class='line'>    |   |-- Result
</span><span class='line'>    |   |   |-- Charge.pm
</span><span class='line'>    |   |   `-- User.pm
</span><span class='line'>    |   `-- ResultBase.pm
</span><span class='line'>    |-- Schema.pm
</span><span class='line'>    `-- Web
</span><span class='line'>        |-- Don
</span><span class='line'>        |   |-- Controller
</span><span class='line'>        |   |   |-- Deposit.pm
</span><span class='line'>        |   |   |-- List.pm
</span><span class='line'>        |   |   |-- Login.pm
</span><span class='line'>        |   |   |-- Logout.pm
</span><span class='line'>        |   |   `-- Root.pm
</span><span class='line'>        |   |-- Model
</span><span class='line'>        |   |   `-- DonDB.pm
</span><span class='line'>        |   `-- View
</span><span class='line'>        |       |-- Bootstrap.pm
</span><span class='line'>        |       `-- Download
</span><span class='line'>        |           `-- CSV.pm
</span><span class='line'>        `-- Don.pm</span></code></pre></td></tr></table></div></figure>


<p> 변경후</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> lib
</span><span class='line'>└── Sil
</span><span class='line'>    └── Don
</span><span class='line'>        ├── Schema
</span><span class='line'>        │   ├── Result
</span><span class='line'>        │   │   ├── Charge.pm
</span><span class='line'>        │   │   └── User.pm
</span><span class='line'>        │   └── ResultBase.pm
</span><span class='line'>        ├── Schema.pm
</span><span class='line'>        ├── Web
</span><span class='line'>        │   ├── Controller
</span><span class='line'>        │   │   ├── Deposit.pm
</span><span class='line'>        │   │   ├── List.pm
</span><span class='line'>        │   │   ├── Login.pm
</span><span class='line'>        │   │   ├── Logout.pm
</span><span class='line'>        │   │   └── Root.pm
</span><span class='line'>        │   ├── Model
</span><span class='line'>        │   │   └── DonDB.pm
</span><span class='line'>        │   └── View
</span><span class='line'>        │       ├── Bootstrap.pm
</span><span class='line'>        │       └── Download
</span><span class='line'>        │           └── CSV.pm
</span><span class='line'>        └── Web.pm</span></code></pre></td></tr></table></div></figure>


<h2>경로명 변경</h2>

<p>변경전</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Sil::Schema::Result::Charge
</span><span class='line'>Sil::Schema::Result::User
</span><span class='line'>Sil::Schema::ResultBase
</span><span class='line'>Sil::Schema
</span><span class='line'>
</span><span class='line'>Sil::Web::Don::Controller::Deposit
</span><span class='line'>Sil::Web::Don::Controller::List
</span><span class='line'>Sil::Web::Don::Controller::Login
</span><span class='line'>Sil::Web::Don::Controller::Logout
</span><span class='line'>Sil::Web::Don::Controller::Root
</span><span class='line'>Sil::Web::Don::Model::DonDB
</span><span class='line'>Sil::Web::Don::View::Bootstrap
</span><span class='line'>Sil::Web::Don::View::Download::CS
</span><span class='line'>Sil::Web::Don</span></code></pre></td></tr></table></div></figure>


<p>변경후</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Sil::Don::Schema::Result::Charge
</span><span class='line'>Sil::Don::Schema::Result::User
</span><span class='line'>Sil::Don::Schema::ResultBase
</span><span class='line'>Sil::Don::Schema
</span><span class='line'>
</span><span class='line'>Sil::Don::Web::Controller::Deposit
</span><span class='line'>Sil::Don::Web::Controller::List
</span><span class='line'>Sil::Don::Web::Controller::Login
</span><span class='line'>Sil::Don::Web::Controller::Logout
</span><span class='line'>Sil::Don::Web::Controller::Root
</span><span class='line'>Sil::Don::Web::Model::DonDB
</span><span class='line'>Sil::Don::Web::View::Bootstrap
</span><span class='line'>Sil::Don::Web::View::Download::CS
</span><span class='line'>Sil::Don::Web</span></code></pre></td></tr></table></div></figure>


<p>p.s 내용을 모두 바꾸어 준후 Sil_web_Don.conf 파일명을 수정 안해주어
한참 고생 했다.. 경로명이 바뀌엇듯이 파일명도 교체 해주어야 한다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Don release]]></title>
    <link href="http://rumidier.github.com/blog/2012/07/23/don-release/"/>
    <updated>2012-07-23T18:49:00+09:00</updated>
    <id>http://rumidier.github.com/blog/2012/07/23/don-release</id>
    <content type="html"><![CDATA[<h2>Donnenwa Open</h2>

<ol>
<li>DNS 요구</li>
<li>Apache2 설정</li>
<li>supervisior 설정</li>
<li>확인</li>
</ol>


<h3>DNS 요구</h3>

<p>도메인 네임을 받아 현진이(서버)에 연결해 주어야 하지만
브롬튼에 도메인이 정의가 되있기 때문에 SE님에게 요구하면 된다.(나만되는겨)</p>

<h3>Apache2 설정</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ssh rumidier@bu….접속
</span><span class='line'>$ cd /etc/apache2/
</span><span class='line'>$ cd sites-available
</span><span class='line'>$ vi user.site.kr (작성)
</span><span class='line'>$ cd ../
</span><span class='line'>$ cd sites-enable
</span><span class='line'>$ ln -s 타킷-경로
</span><span class='line'>$ ~/etc/init.d/apache2 restart</span></code></pre></td></tr></table></div></figure>


<p></p>

<h3>supervisior 설정</h3>

<p>슈퍼 바이저는 서버가 죽었다 다시 살아 났을시 수동이 아닌 자동으로 서버를 뛰워주기 위해 필요한 기능이다.</p>

<p>돈내놔는 carton을 사용하고 plackup으로 뛰우며 플라넥스와는 다르게 worker의 갯수가 존재 하지 않는다. 포트 설정은 아파치에서 해준 포트를 명시 해준후 디렉토리와 유저, 환경 등록을 해주면 끝이 난다.
환경경로는 carton과 plackup 경로도 알아야 하는거 같다(이 부분은 설명이 더 필요)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cd /etc
</span><span class='line'>$ vi supervisord.conf
</span><span class='line'>
</span><span class='line'>[program:Donnenwa] 
</span><span class='line'>command=/usr/local/bin/carton exec -Ilib -- /home/USER Donnenwa/local/bin/plackup -Ilib -a /home/USER/Donnenwa
</span><span class='line'>app.psgi --host 127.0.0.1 --port You_port(ex:3000)  
</span><span class='line'>directory=/home/User/Donnenwa 
</span><span class='line'>user=USER 
</span><span class='line'>environment=PATH=/usr/local/bin:/usr/bin:/bin,HOME=/home/USER
</span><span class='line'>stdout_logfile=/home/USER/logs/stdout 
</span><span class='line'>stderr_logfile=/home/USER/logs/stderr 
</span><span class='line'>
</span><span class='line'>$ sudo supervisorctl
</span><span class='line'>supervisor&gt; status
</span><span class='line'>….
</span><span class='line'>supervisor&gt; update
</span><span class='line'>supervisor&gt; exit
</span><span class='line'>$ 서버 실행 확인 끝</span></code></pre></td></tr></table></div></figure>


<h3>더 물어 봐야 할것</h3>

<ol>
<li>supervisor의 셋팅을 무엇을 참조 하는가?</li>
<li>도메인 등록은 어떻게 하는가?</li>
<li>apach2 설정은 어떻게 하는가?</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Side-function]]></title>
    <link href="http://rumidier.github.com/blog/2012/07/12/side-function/"/>
    <updated>2012-07-12T14:03:00+09:00</updated>
    <id>http://rumidier.github.com/blog/2012/07/12/side-function</id>
    <content type="html"><![CDATA[<h2>Action - approval, refuse</h2>

<p><a href="https://gist.github.com/3096325">approval</a></p>

<p><a href="https://gist.github.com/3096321">refuse</a></p>

<p>Approval은 청구 목록에 대하여 승인 기능을
refuse는 청구 목렉에 대하여 거부 기능을 가지게 된다.</p>

<p>승인 기능은 두가지 상황에서 선택 할수 있게 된다.
/list/view/user_num과 전체 list상태, 대기 리스트 상태, 거부 리스트 상태
에서 활성화가 되고 action을 취할수 있게 한다.</p>

<p>거부 기능은 두가지 상황에서 선택 할수 있게 된다.
/list/view/user_num과 전체 list상태, 대기 리스트 상태, 승인 리스트 상태
에서 활성화가 되고 action 을 취할수 있게 한다.</p>

<p>/list/view/user_id</p>

<p>아래와 같이 id 값과 함께 전달 할수 있다.</p>

<pre><code>&lt;a href="[% c.uri_for('/list/approval', charge.id) %]" class="btn btn-primary"&gt;승인&lt;/a&gt;
&lt;a href="[% c.uri_for('/list/refuse', charge.id) %]" class="btn btn-primary"&gt;거부&lt;/a&gt;
</code></pre>

<p>CaputreArgs(1) 옵션으로 $id 값(들)을 받을수 있게 된다.</p>

<pre><code>sub approval :Local :CaptureArgs(1) {
    my ( $self, $c, $id ) = @_;
    my @target_ids = split ',', $id;

sub refuse :Local :CaptureArgs(1) {
my ( $self, $c, $id ) = @_;
my @target_ids = split ',', $id;
</code></pre>

<p>@target_id의 모든 값(들)을 status값이 2 or 3로 업데이트 한다.
업데이트는 검색을 한 값들을 대상으로 update를 하게 된다.</p>

<pre><code>$ vi root/templates/default/src/list

# 승인
my $approval = $c-&gt;model('MyApp_DB')-&gt;resultset('Charge')-&gt;search({ id =&gt; { -in
        =&gt; \@target_ids } })-&gt;update_all({ status =&gt; '2' });
# 거부
my $refuse = $c-&gt;model('MyApp_DB')-&gt;resultset('Charge')-&gt;search({ id =&gt; { -in
        =&gt; \@target_ids } })-&gt;update_all({ status =&gt; '3' });
</code></pre>

<p>flash기능으로 messages값을 전달하여 조건에 맞을시 메세지를 출력 시키도록 한다.(/list/index.tt 참고)
조건은 approval, refuse기능이 정상 작동 되었는지를 검사 하게 된다.</p>

<pre><code>if ($query_status) {
    $c-&gt;flash-&gt;{messages} = 'Success message.';
}
else {
    $c-&gt;flash-&gt;{messages} = 'No status Item.';
}
</code></pre>

<p>템플릿에 쓰일 status값과 함께 전체 목록으로 redirect 시키도록 한다.</p>

<pre><code>$c-&gt;stash-&gt;{status} = '2'; #상태에 맞는 status값
$c-&gt;res-&gt;redirect($c-&gt;uri_for('/list'));
</code></pre>

<h2>Action - delete</h2>

<p><a href="https://gist.github.com/3096329">delete</a></p>

<p>승인 기능은 두가지 상황에서 선택 할수 있게 된다.
/list/view/user_num과 전체 list상태, 대기, 거부, 수정 상태
 에서 활성화가 되고 action을 취할수 있게 한다.</p>

<pre><code>$ vi root/templates/default/src/list
&lt;a href="[% c.uri_for('/list/delete', charge.id) %]" class="btn btn-primary"&gt;삭제&lt;/a&gt;
</code></pre>

<p>다른 기능과 같이 CaptureArgs(1)를 받는다.</p>

<pre><code>sub delete :Local :CaptureArgs(1) {
my ( $self, $c, $id ) = @_;
my @target_ids = split ',', $id;
</code></pre>

<p>다른 기능과 달리 update_all 이 아닌 delete_all를 통하여 내용을 삭제 한다.</p>

<pre><code>my $charge = $c-&gt;model('DonDB')-&gt;resultset('Charge')-&gt;search({ id =&gt; { -in =&gt; \@target_ids } })-&gt;delete_all;
</code></pre>

<h2>CPAN</h2>

<p><a href="https://metacpan.org/module/DBIx::Class::Manual::DocMap">DBIx::Class::Manual::DocMap</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[list-edit]]></title>
    <link href="http://rumidier.github.com/blog/2012/07/12/list-edit/"/>
    <updated>2012-07-12T13:56:00+09:00</updated>
    <id>http://rumidier.github.com/blog/2012/07/12/list-edit</id>
    <content type="html"><![CDATA[<h2>청구 내역 수정</h2>

<p><a href="https://gist.github.com/3095912">List-edit-action</a></p>

<p>수정 되어야할 $edit_id를 받을수 있어햐 한다.</p>

<pre><code>sub edit :Local :CaptureArgs(1) {
my ( $self, $c, $edit_id ) = @_;
</code></pre>

<p>수정할 폼을 제출 했을때 업데이트 동작 혹은 정보 출력을 하여야 한다.</p>

<pre><code>if ($c-&gt;req-&gt;method eq 'POST') {
    my @messages;

    push @messages, 'amount is invaild' if ($c-&gt;req-&gt;params-&gt;{amount} !~ /^\d+$/);
    push @messages, 'title is required' unless ($c-&gt;req-&gt;params-&gt;{title});

    if (@messages) {
    $c-&gt;flash(
        messages =&gt; @messages,
        comment  =&gt; $c-&gt;req-&gt;params-&gt;{comment},
        title    =&gt; $c-&gt;req-&gt;params-&gt;{title},
        amount   =&gt; $c-&gt;req-&gt;params-&gt;{amount},
    );

    return $c-&gt;res-&gt;redirect($c-&gt;uri_for("/list/view/$c-&gt;req-&gt;params-&gt;{charge_id}"));
    }

    my $time = strftime "%Y-%m-%d %H:%M:%S", localtime;
    my %row = (
    id         =&gt; $c-&gt;req-&gt;params-&gt;{charge_id},
    amount     =&gt; $c-&gt;req-&gt;params-&gt;{amount},
    user       =&gt; $c-&gt;req-&gt;params-&gt;{charge_user},
    title      =&gt; $c-&gt;req-&gt;params-&gt;{title},
    comment    =&gt; $c-&gt;req-&gt;params-&gt;{comment},
    updated_on =&gt; "$time",
    );
    $c-&gt;model('DonDB')-&gt;resultset('Charge')-&gt;update_or_create(\%row);

    $c-&gt;res-&gt;redirect($c-&gt;uri_for("/list/view/$row{id}"));
}
else {
    my $editer = $c-&gt;model('DonDB')-&gt;resultset('Charge')-&gt;find($edit_id);

    $c-&gt;stash(
    editer =&gt; $editer,
    );
}
}
</code></pre>

<p><a href="https://gist.github.com/3095922">List-edit.tt</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[list-write]]></title>
    <link href="http://rumidier.github.com/blog/2012/07/12/list-write/"/>
    <updated>2012-07-12T13:49:00+09:00</updated>
    <id>http://rumidier.github.com/blog/2012/07/12/list-write</id>
    <content type="html"><![CDATA[<p><a href="https://gist.github.com/3095879">List-write.tt</a>
<a href="https://gist.github.com/3095901">List-write-action</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[list-view]]></title>
    <link href="http://rumidier.github.com/blog/2012/07/12/list-view/"/>
    <updated>2012-07-12T13:41:00+09:00</updated>
    <id>http://rumidier.github.com/blog/2012/07/12/list-view</id>
    <content type="html"><![CDATA[<p><a href="https://gist.github.com/3095846">List-view-action</a>
<a href="https://gist.github.com/3095858">List-view.tt</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[list]]></title>
    <link href="http://rumidier.github.com/blog/2012/07/11/list/"/>
    <updated>2012-07-11T23:06:00+09:00</updated>
    <id>http://rumidier.github.com/blog/2012/07/11/list</id>
    <content type="html"><![CDATA[<h2>청구 목록 페이지</h2>

<p><a href="https://gist.github.com/3095682">List.pm - index</a></p>

<p><a href="https://gist.github.com/3095679">/list/index.tt</a></p>

<h2>List Controller - Query option</h2>

<p>등록 날짜 역순 출력을 위한 내림 차수 옵션을 준다.</p>

<pre><code>my %attr  = ( 'order_by' =&gt; { -desc =&gt; 'me.id' } );

my $total_charge;
my %cond    = ();
</code></pre>

<p>현재 가르켜야 할 페이지 정보가 없다면 1페이지로 하게 한다.</p>

<pre><code>my $page    = $c-&gt;req-&gt;params-&gt;{page};
$attr{page} = $page || 1;
</code></pre>

<p>status 옵션이 정의 되지 않았다면 전체(대기/승인/거부) 검색을 할수 있게 한다.</p>

<pre><code>my $status  = $c-&gt;req-&gt;param("status") || $c-&gt;stash-&gt;{"status"} || '0'; #수정 필요
</code></pre>

<p>status 옵션 없으면 전체 있으면 상태 검색 할수 있게 한다.</p>

<pre><code>%cond         = ( status =&gt; $status ) if $status;
$total_charge = $c-&gt;model('DonDB')-&gt;resultset('Charge')-&gt;search(\%cond, \%attr);
</code></pre>

<p>Data::Pageset활용 하여 페이징 할수 있다.</p>

<pre><code>my $page_info =
Data::Pageset-&gt;new(
    {
    ( map { $_ =&gt; $total_charge-&gt;pager-&gt;$_ } qw/entries_per_page total_entries current_page/ ),
    mode =&gt; "slide",
    pages_per_set =&gt; 10,
    }
);

$c-&gt;stash(
    lists   =&gt; [ $total_charge-&gt;all ],
    status  =&gt; $status,
    pageset =&gt; $page_info,
);
}
</code></pre>

<h2>List - View</h2>

<p>성공 혹은 실패 메세지 출력을 할수 있게 한다.</p>

<pre><code>[% IF messages %]
&lt;div class="alert fade in"&gt;
&lt;button class="close" data-dismiss="alert"&gt;&amp;times;&lt;/button&gt;
[% messages %]
&lt;/div&gt;
[% END %]
</code></pre>

<p>탭 등록으로 원하는 상태의 값들만 보여 줄수 있게 한다.</p>

<pre><code>&lt;div class="container-fluid"&gt;
  &lt;div class="row-fluid"&gt;
&lt;div class="span2"&gt;
  &lt;ul class="nav nav-tabs nav-stacked"&gt;
    &lt;li class="active"&gt;&lt;a href="http://rumidier.github.com/list"&gt;전체&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://rumidier.github.com/list?status=1"&gt;대기&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://rumidier.github.com/list?status=2"&gt;승인&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://rumidier.github.com/list?status=3"&gt;거부&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/div&gt;
</code></pre>

<p>현재 경로가 어떻게 되는지 확인 할수 있도록 한다.</p>

<pre><code>&lt;div class="span10"&gt;
  &lt;ul class="breadcrumb"&gt;
    &lt;li&gt;목록
        &lt;span class="divider"&gt;/&lt;/span&gt;
    &lt;/li&gt;      
    &lt;li class="active"&gt;
    [% IF status == "1" %]
        &lt;b&gt; 대기 &lt;/b&gt;
    [% ELSIF status == "2" %]
        &lt;b&gt; 승인 &lt;/b&gt;
    [% ELSIF status == "3" %]
        &lt;b&gt; 거부 &lt;/b&gt;
    [% ELSE %]
        &lt;b&gt; 전체 &lt;/b&gt;
    [% END %]     
    &lt;/li&gt;
  &lt;/ul&gt;
</code></pre>

<h2>CPAN</h2>

<p><a href="https://metacpan.org/module/Data::Pageset">Data::Pageset</a></p>

<p><a href="https://metacpan.org/module/DBIx::Class::Manual::DocMap">DBIx::Class::Manual::DocMap</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Catalyst-signup]]></title>
    <link href="http://rumidier.github.com/blog/2012/07/11/catalyst-signup/"/>
    <updated>2012-07-11T22:55:00+09:00</updated>
    <id>http://rumidier.github.com/blog/2012/07/11/catalyst-signup</id>
    <content type="html"><![CDATA[<p>Signup Controller <a href="https://gist.github.com/3090526">Login.pm</a></p>

<pre><code>$ vi lib/MyApp/Controller/Login.pm
# 내용 추가
</code></pre>

<h2>:Private</h2>

<p>forword 혹은 detach로만 접근이 가능 하며, URL로 부터 바로 접근이 불가능 합니다.</p>

<pre><code>sub signup :Path('/signup') :Args(0) {
my ( $self, $c ) = @_;

$c-&gt;detach('signup_POST') if $c-&gt;req-&gt;method eq 'POST';
}

sub signup_POST :Private {
my ( $self, $c ) = @_;
</code></pre>

<h2>Validation - Empty Value</h2>

<p>입력값중에 빈값이 있으면 안돼므로 빈값인지 확인 하여 빈값일시 메세지를
출력 할수 있게 작업한다.</p>

<pre><code>my $user_name = $c-&gt;req-&gt;param('user_name') || '';
my $email     = $c-&gt;req-&gt;param('email')     || '';
my $password  = $c-&gt;req-&gt;param('password')  || '';

my @messages;
push @messages, 'Input the user name'     unless $user_name;
push @messages, 'Input the user email'    unless $email;
push @messages, 'Input the user password' unless $password;

if (@messages) {
    $c-&gt;flash(
        messages =&gt; @messages,
    );

    return $c-&gt;res-&gt;redirect($c-&gt;uri_for('/signup'));
}
</code></pre>

<h2>Validation - DB Unique search</h2>

<p>User table에 user_name과 email이 동일한 값이 있는지 확인 하여 동일한
값이 있을시 error_msg를 출력 할수 있게 한다.</p>

<pre><code>my $cond = {};
$cond-&gt;{'me.user_name'} = "$user_name";
my $name_search = $c-&gt;model('DonDB')-&gt;resultset('User')-&gt;search($cond);
if ($name_search-&gt;count) {
    $c-&gt;flash(
        messages =&gt; 'Using ID again input the New ID',
    );

    return $c-&gt;res-&gt;redirect($c-&gt;uri_for('/signup'));
}

$cond = {} if $cond;
$cond-&gt;{'me.email'} = "$email";
my $email_search = $c-&gt;model('DonDB')-&gt;resultset('User')-&gt;search($cond);
if ($email_search-&gt;count) {
    $c-&gt;flash(
        messages      =&gt; 'Using email again input the New email',
    );

    return $c-&gt;res-&gt;redirect($c-&gt;uri_for('/signup'));
}
</code></pre>

<h2>유저 등록</h2>

<p>Validation이 통과 했다면 테이블에 등록 할수 있게 한다.
실패시 signup페이지로 다시 이동 하며</p>

<pre><code>my $time    = strftime "%Y-%m-%d %H:%M:%S", localtime;
my $created = $c-&gt;model('DonDB::User')-&gt;create({
    user_name  =&gt; $user_name,
    email      =&gt; $email,
    password   =&gt; $password,
    created_on =&gt; "$time",
    updated_on =&gt; "$time",
});

$c-&gt;res-&gt;redirect($c-&gt;req-&gt;uri) unless $created;
</code></pre>

<h2>유저 등록 - 확인</h2>

<p>등록후 이름과 패스워드를 확인하여 다음 페이지 혹은 tdpfjaptpwldhk 냐혀ㅔvpdlwlfmf ghcnfgksek.</p>

<pre><code>if ($c-&gt;authenticate({ user_name =&gt; $user_name, password =&gt; $password } )) {
    $c-&gt;res-&gt;redirect($c-&gt;uri_for($c-&gt;controller('List')-&gt;action_for('index')));
} else {
    $c-&gt;stash(error_msg =&gt; "Bad username or password."); # maybe flash?
    $c-&gt;res-&gt;redirect($c-&gt;req-&gt;uri);
}
</code></pre>

<p>}</p>

<p>Signup View.tt <a href="https://gist.github.com/3090541">signup.tt</a></p>

<pre><code>$ vi root/templates/default/src/login/signup.tt
# 내용 추가
</code></pre>

<h2>jquery 미사용</h2>

<p>현재 Validation은 컨트롤 단에서만 검사 한다
추가가 필요함</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Catalyst-Login]]></title>
    <link href="http://rumidier.github.com/blog/2012/07/11/catalyst-login/"/>
    <updated>2012-07-11T20:44:00+09:00</updated>
    <id>http://rumidier.github.com/blog/2012/07/11/catalyst-login</id>
    <content type="html"><![CDATA[<p><a href="https://metacpan.org/module/Catalyst::Manual::Tutorial::05_Authentication">Catalyst::Manual::Tutorial::05_Authentication</a></p>

<h2>Load plugins</h2>

<p>/lib/MyApp.pm</p>

<pre><code>$ vi ./lib/MyApp/Web/MyApp.pm

# 아래에 다음과 같이 추가
use Catalyst qw/
-Debug
ConfigLoader
Static::Simple
Unicode::Encoding

StackTrace

Authentication

Session
Session::Store::File
Session::State::Cookie
/;
</code></pre>

<p>MakeFile.PL</p>

<pre><code>$ vi Makefile.PL

# 추가
requires 'Catalyst::Plugin::Authentication';
requires 'Catalyst::Plugin::Session';
requires 'Catalyst::Plugin::Session::Store::File';
requires 'Catalyst::Plugin::Session::State::Cookie';

$ carton install
</code></pre>

<p>MyApp.conf</p>

<pre><code>$vi MyApp.conf

# 추가
&lt;Plugin::Authentication&gt;
&lt;default&gt;
    password_type clear
    user_model    DB::User
    class         SimpleDB
&lt;/default&gt;
&lt;/Plugin::Authentication&gt;
</code></pre>

<h2>Add Login and Logout Controllers</h2>

<p>Controller 생성</p>

<pre><code>$ script/myapp_create.pl controller Login
$ script/myapp_create.pl controller Logout
</code></pre>

<p>Login <a href="https://gist.github.com/3089985">Login.pm</a></p>

<pre><code>$ vi lib/MyApp/Controller/Login.pm
</code></pre>

<p>Logout <a href="https://gist.github.com/3090013">Logout.pm</a></p>

<pre><code>$ vi lib/MyApp/Controller/Logout.pm
</code></pre>

<h2>Add Valid User Check</h2>

<p>Root <a href="https://gist.github.com/3090343">Root.pm</a></p>

<pre><code>$ vi lib/MyApp/Controller/Root.pm
</code></pre>

<h2>추가 해야 할점</h2>

<p>현재는 DB에 유저의 password가 암호화 되지 않음 문서상
다음 내용에 나오기 때문에 추가가 필요함</p>

<h2>CPAN</h2>

<p><a href="https://metacpan.org/module/DBIx::Class::Manual::DocMap">DBIx::Class::Manual::DocMap</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[catalyst]]></title>
    <link href="http://rumidier.github.com/blog/2012/07/04/catalyst/"/>
    <updated>2012-07-04T19:02:00+09:00</updated>
    <id>http://rumidier.github.com/blog/2012/07/04/catalyst</id>
    <content type="html"><![CDATA[<h2>DBIx::Class로 스키마 관리하기</h2>

<p><a href="http://advent.perl.kr/2011/2011-12-17.html">jeen</a>님이 발표한 스키마 관리 하기
입니다.</p>

<p>jeen님의 글을 보게 되면 기존의 스키마를 관리하는 방법은 sql의 잦은 교체시 많은 문제점이
발생하고 있다고 서술 합니다.</p>

<p>스키마 관리를 좀더 편하게 하기 위하여 마지막에 서술 하는
<a href="https://metacpan.org/module/dbicdump">dbicdump</a>를 사용하여 간편하게 스키마 관리를 해보도록
합니다.</p>

<p>dbicdump를 사용하기 위해 필요한 ResultBase.pm과 schema.pl파일을 만들어 보도록 하겠습니다.</p>

<h2>schema/schema.pl</h2>

<p><a href="http://rumidier.github.com/blog/2012/07/02/catalyst/">schema.pl 설명</a></p>

<figure class='code'><figcaption><span>schema.pl </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="k">my</span> <span class="nv">$DB_NAME</span>     <span class="o">=</span> <span class="nv">$ENV</span><span class="p">{</span><span class="n">DB</span><span class="p">}</span>           <span class="o">||</span> <span class="s">&#39;DB_NAME&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">my</span> <span class="nv">$DB_USER</span>     <span class="o">=</span> <span class="nv">$ENV</span><span class="p">{</span><span class="n">DB_USER</span><span class="p">}</span>     <span class="o">||</span> <span class="s">&#39;DB_USER&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">my</span> <span class="nv">$DB_PASSWORD</span> <span class="o">=</span> <span class="nv">$ENV</span><span class="p">{</span><span class="n">DB_PASSWORD</span><span class="p">}</span> <span class="o">||</span> <span class="s">&#39;DB_PASSWORD&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="n">schema_class</span> <span class="o">=&gt;</span> <span class="s">&quot;Silex::Schema&quot;</span><span class="p">,</span>
</span><span class='line'><span class="n">connect_info</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">dsn</span>               <span class="o">=&gt;</span> <span class="s">&quot;dbi:mysql:$DB_NAME:127.0.0.1&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="n">user</span>              <span class="o">=&gt;</span> <span class="nv">$DB_USER</span><span class="p">,</span>
</span><span class='line'>  <span class="n">pass</span>              <span class="o">=&gt;</span> <span class="nv">$DB_PASSWORD</span><span class="p">,</span>
</span><span class='line'>  <span class="n">mysql_enable_utf8</span>  <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'><span class="p">},</span>
</span><span class='line'><span class="n">loader_options</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">dump_directory</span>     <span class="o">=&gt;</span> <span class="s">&#39;lib&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="n">naming</span>             <span class="o">=&gt;</span> <span class="p">{</span> <span class="n">ALL</span> <span class="o">=&gt;</span> <span class="s">&#39;v8&#39;</span> <span class="p">},</span>
</span><span class='line'>  <span class="n">skip_load_external</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>  <span class="n">relationships</span>      <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>  <span class="n">use_moose</span>          <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>  <span class="n">only_autoclean</span>     <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>  <span class="n">col_collision_map</span>  <span class="o">=&gt;</span> <span class="s">&#39;column_%s&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="n">result_base_class</span> <span class="o">=&gt;</span> <span class="s">&#39;MyApp::Schema::ResultBase&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="n">overwrite_modifications</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>  <span class="n">datetime_undef_if_invalid</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>  <span class="n">custom_column_info</span> <span class="o">=&gt;</span> <span class="k">sub </span><span class="p">{</span>
</span><span class='line'>  <span class="k">my</span> <span class="p">(</span><span class="nv">$table</span><span class="p">,</span> <span class="nv">$col_name</span><span class="p">,</span> <span class="nv">$col_info</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nv">$col_name</span> <span class="ow">eq</span> <span class="s">&#39;password&#39;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="p">{</span> <span class="nv">%</span><span class="p">{</span> <span class="nv">$col_info</span> <span class="p">},</span>
</span><span class='line'>          <span class="n">encode_column</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>          <span class="n">encode_class</span>  <span class="o">=&gt;</span> <span class="s">&#39;Digest&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="n">encode_args</span>   <span class="o">=&gt;</span> <span class="p">{</span> <span class="n">algorithm</span> <span class="o">=&gt;</span> <span class="s">&#39;SHA-1&#39;</span><span class="p">,</span> <span class="nb">format</span> <span class="o">=&gt;</span> <span class="s">&#39;hex&#39;</span> <span class="p">},</span>
</span><span class='line'>          <span class="n">encode_check_method</span> <span class="o">=&gt;</span> <span class="s">&#39;check_password&#39;</span> <span class="p">};</span>
</span><span class='line'>  <span class="p">}</span> <span class="c1"># DB password 설정</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nv">$col_name</span> <span class="ow">eq</span> <span class="s">&#39;created_on&#39;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="p">{</span> <span class="nv">%</span><span class="p">{</span> <span class="nv">$col_info</span> <span class="p">},</span> <span class="n">set_on_create</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span> <span class="n">inflate_datetime</span> <span class="o">=&gt;</span> <span class="mi">1</span> <span class="p">};</span>
</span><span class='line'>  <span class="p">}</span> <span class="c1"># DB created_on 설정</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nv">$col_name</span> <span class="ow">eq</span> <span class="s">&#39;updated_on&#39;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="p">{</span> <span class="nv">%</span><span class="p">{</span> <span class="nv">$col_info</span> <span class="p">},</span> <span class="n">set_on_create</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span> <span class="n">set_on_update</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span> <span class="n">inflate_datetime</span> <span class="o">=&gt;</span> <span class="mi">1</span> <span class="p">};</span>
</span><span class='line'>  <span class="p">}</span> <span class="c1"># DB updated_on 설정</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>lib/MyApp/Schema/ResultBase.pm</h2>

<p>ResultBase 클래스의 제약 문제 때문에 result_base_class 값을 지정해 줌으로써 모든 결과
 클래스들은 DBIx::Class::Core가 아닌 MyApp::Schema::ResultBase를 상속받게 합니다.
MyApp::Schema::ResultBase는 개인이 정의 해주는것 이므로 아래를 참조 합니다.</p>

<p>MD5 체크섬 값 아래에 중복되는 코드를 매번 적어주어야 했습니다.
이렇게 사용할 컴포넌트들을 결과클래스 별로 지정하는 대신 ResultBase 클래스를 읽어들입니다.
사실 이처럼 ResultBase를 놓고 여기에 컴포넌트를 일괄해서 읽어들이는 방식은
Cookbook 문서에서도 스타트업 속도 향상을 위해 권장하고 있습니다. - <a href="http://advent.perl.kr/2011/2011-12-17.html">by Jeen</a> -</p>

<p>그리고 컴포넌트의 사용을 위한 컬럼의 속성은 custom_column_info 속성에 코드를 등록해 지정할 수 있습니다.(schema.pl 하단 참조)
 위의 코드처럼 등록하면 created_on 속성에 TimeStamp 컴포넌트를 사용하기 위한 속성 값인 set_on_create 옵션이 모든 결과클래스에 추가됩니다.
(이거 멋지다..)</p>

<figure class='code'><figcaption><span>ResultBase </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>package MyApp::Schema::ResultBase;
</span><span class='line'>use Moose;
</span><span class='line'>use MooseX::NonMoose;
</span><span class='line'>use namespace::autoclean;
</span><span class='line'>
</span><span class='line'>extends 'DBIx::Class::Core';
</span><span class='line'>
</span><span class='line'>__PACKAGE__->load_components(qw/
</span><span class='line'>  InflateColumn::DateTime
</span><span class='line'>  TimeStamp
</span><span class='line'>/);
</span><span class='line'>
</span><span class='line'>__PACKAGE__->meta->make_immutable;
</span><span class='line'>
</span><span class='line'>1;</span></code></pre></td></tr></table></div></figure>


<p>위의 두가지 코드를 작성 하였다면 준비는 끝났습니다.
(<strong>dbicdump는 db 정보를 덤프해서 스키마를 작성</strong>하는 것으로 코드 작성및 작성 후에라도
db가 정의 되어 있어야 합니다.)</p>

<h2>dbicdump 사용하기</h2>

<p>아래를 실행한후 lib/MyApp/Schema/Result에 .pm 파일들이 새로 생성되거나 수정 되었다면 확인을 해보라</p>

<pre><code>$ dbicdump -Ilib schema/schema.pl
</code></pre>

<h2>MakeFile.pl 모듈 추가</h2>

<p>다른 모듈이 더 추가 될수 있습니다 에러 메세지를 확인 하고 필요한 모듈을 더 설치 하세요.</p>

<pre><code>requires "DBIx::Class::TimeStamp";
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[catalyst]]></title>
    <link href="http://rumidier.github.com/blog/2012/07/02/catalyst/"/>
    <updated>2012-07-02T18:13:00+09:00</updated>
    <id>http://rumidier.github.com/blog/2012/07/02/catalyst</id>
    <content type="html"><![CDATA[<h1>DB confing 셋팅 정보</h1>

<pre><code>my $DB_NAME     = $ENV{DB_NAME}     || 'NAME';
my $DB_USER     = $ENV{DB_USER}     || 'USER';
my $DB_PASSWORD = $ENV{DB_PASSWORD} || 'PASSWORD';
</code></pre>

<h1>옵션 내용</h1>

<h2>DBIx::Class::Schema::Loader::Base</h2>

<pre><code>schema_class =&gt; name of the schema class we are building,
</code></pre>

<p>적용</p>

<pre><code>schema_class =&gt; "Project::Schema",
</code></pre>

<hr />

<ul>
<li>dump_directory</li>
</ul>


<p>The value of this option is a perl libdir pathname. Within that directory this module will create a baseline manual DBIx::Class::Schema module set, based on what it creates at runtime.</p>

<p>The created schema class will have the same classname as the one on which you are setting this option (and the ResultSource classes will be based on this name as well).</p>

<p>Normally you wouldn&#8217;t hard-code this setting in your schema class, as it is meant for one-time manual usage.</p>

<p>See &#8220;dump_to_dir&#8221; in DBIx::Class::Schema::Loader for examples of the recommended way to access this functionality.</p>

<p>적용</p>

<pre><code>dump_directory =&gt; 'lib',
</code></pre>

<hr />

<p>naming</p>

<p>Static schemas (ones dumped to disk) will, by default, use the new-style relationship names</p>

<p>and singularized Results, unless you&#8217;re overwriting an existing dump made by an older version</p>

<p>of DBIx::Class::Schema::Loader, in which case the backward compatible RelBuilder will be activated,</p>

<p>and the appropriate monikerization used.</p>

<p>Specifying</p>

<pre><code>naming =&gt; 'current'
</code></pre>

<p>will disable the backward-compatible RelBuilder and use the new-style relationship names along with singularized Results, even when overwriting a dump made with an earlier version.</p>

<p>The option also takes a hashref:</p>

<pre><code>naming =&gt; {
    relationships    =&gt; 'v8',
    monikers         =&gt; 'v8',
    column_accessors =&gt; 'v8',
    force_ascii      =&gt; 1,
}
</code></pre>

<p>or</p>

<pre><code>naming =&gt; { ALL =&gt; 'v8', force_ascii =&gt; 1 }
</code></pre>

<p>The keys are:</p>

<p>ALL</p>

<p>Set &#8220;relationships&#8221;, &#8220;monikers&#8221; and &#8220;column_accessors&#8221; to the specified value.</p>

<p>relationships</p>

<p>How to name relationship accessors.</p>

<p>monikers</p>

<p>How to name Result classes.</p>

<p>column_accessors</p>

<p>How to name column accessors in Result classes.</p>

<p>force_ascii</p>

<p>For &#8220;v8&#8221; mode and later, uses String::ToIdentifier::EN instead of String::ToIdentifier::EM::Unicode to force monikers and other identifiers to ASCII.</p>

<p>The values can be:</p>

<p>current</p>

<p>Latest style, whatever that happens to be.</p>

<p>v4</p>

<p>Unsingularlized monikers, has_many only relationships with no _id stripping.</p>

<p>v5</p>

<p>Monikers singularized as whole words, might_have relationships for FKs on UNIQUE constraints, _id stripping for belongs_to relationships.</p>

<p>Some of the _id stripping edge cases in 0.05003 have been reverted for the v5 RelBuilder.</p>

<p>v6</p>

<p>All monikers and relationships are inflected using Lingua::EN::Inflect::Phrase, and there is more aggressive _id stripping from relationship names.</p>

<p>In general, there is very little difference between v5 and v6 schemas.</p>

<p>v7</p>

<p>This mode is identical to v6 mode, except that monikerization of CamelCase table names is also done better (but best in v8.)</p>

<p>CamelCase column names in case-preserving mode will also be handled better for relationship name inflection (but best in v8.) See &#8220;preserve_case&#8221;.</p>

<p>In this mode, CamelCase &#8220;column_accessors&#8221; are normalized based on case transition instead of just being lowercased, so FooId becomes foo_id.</p>

<p>v8</p>

<p>(EXPERIMENTAL)</p>

<p>The default mode is &#8220;v7&#8221;, to get &#8220;v8&#8221; mode, you have to specify it in &#8220;naming&#8221; explicitly until 0.08 comes out.</p>

<p>&#8220;monikers&#8221; and &#8220;column_accessors&#8221; are created using String::ToIdentifier::EN::Unicode or String::ToIdentifier::EN if &#8220;force_ascii&#8221; is set; this is only significant for names with non-\w characters such as ..</p>

<p>CamelCase identifiers with words in all caps, e.g. VLANValidID are supported correctly in this mode.</p>

<p>For relationships, belongs_to accessors are made from column names by stripping postfixes other than _id as well, for example just Id, _?ref, _?cd, _?code and _?num, case insensitively.</p>

<p>적용</p>

<pre><code>naming =&gt; { ALL =&gt; 'v8' },
</code></pre>

<hr />

<p>relationships</p>

<p>How to name relationship accessors.</p>

<p>적용</p>

<pre><code>relationships =&gt; 1,

# 왜 여기만 1이지? ALL =&gt; v8이었는데?
</code></pre>

<hr />

<p>skip_load_external</p>

<p>Skip loading of other classes in @INC. The default is to merge all other classes with the same name found in @INC into the schema file we are creating.</p>

<p>적용</p>

<pre><code>skip\_load_external =&gt; 1,
</code></pre>

<hr />

<p>use_moose</p>

<p>Creates Schema and Result classes that use Moose, MooseX::NonMoose and MooseX::MarkAsMethods (or namespace::autoclean, see below). The default content after the md5 sum also makes the classes immutable.</p>

<p>It is safe to upgrade your existing Schema to this option.</p>

<p>적용</p>

<pre><code>use_moose          =&gt; 1,
</code></pre>

<hr />

<p>only_autoclean</p>

<p>By default, we use MooseX::MarkAsMethods to remove imported functions from your generated classes. It uses namespace::autoclean to do this, after telling your object&#8217;s metaclass that any operator overloads in your class are methods, which will cause namespace::autoclean to spare them from removal.</p>

<p>This prevents the &#8220;Hey, where&#8217;d my overloads go?!&#8221; effect.</p>

<p>If you don&#8217;t care about operator overloads, enabling this option falls back to just using namespace::autoclean itself.</p>

<p>If none of the above made any sense, or you don&#8217;t have some pressing need to only use namespace::autoclean, leaving this set to the default is recommended.</p>

<p>적용</p>

<pre><code>only_autoclean     =&gt; 1,
</code></pre>

<hr />

<p>col_collision_map</p>

<p>This option controls how accessors for column names which collide with perl methods are named. See &#8220;COLUMN ACCESSOR COLLISIONS&#8221; for more information.</p>

<p>This option takes either a single sprintf format or a hashref of strings which are compiled to regular expressions that map to sprintf formats.</p>

<p>Examples:</p>

<pre><code>col_collision_map =&gt; 'column_%s'

col_collision_map =&gt; { '(.*)' =&gt; 'column_%s' }

col_collision_map =&gt; { '(foo).*(bar)' =&gt; 'column_%s_%s' }
</code></pre>

<p>적용</p>

<pre><code>col_collision_map  =&gt; 'column_%s',
</code></pre>

<hr />

<p>result_base_class</p>

<p>Base class for your table classes (aka result classes). Defaults to &#8216;DBIx::Class::Core&#8217;.</p>

<p>적용</p>

<pre><code>result_base_class =&gt; 'Evid::Schema::ResultBase',
</code></pre>

<hr />

<p>overwrite_modifications</p>

<p>Default false. If false, when updating existing files, Loader will refuse to modify any Loader-generated code that has been modified since its last run (as determined by the checksum Loader put in its comment lines).</p>

<p>If true, Loader will discard any manual modifications that have been made to Loader-generated code.</p>

<p>Again, you should be using version control on your schema classes. Be careful with this option.</p>

<p>적용</p>

<pre><code>overwrite_modifications =&gt; 1,
</code></pre>

<hr />

<p>datetime_undef_if_invalid</p>

<p>Pass a 0 for this option when using MySQL if you DON&#8217;T want datetime_undef_if_invalid => 1 in your column info for DATE, DATETIME and TIMESTAMP columns.</p>

<p>The default is recommended to deal with data such as 00/00/00 which sometimes ends up in such columns in MySQL.</p>

<p>적용</p>

<pre><code>datetime_undef_if_invalid =&gt; 1,
</code></pre>

<hr />

<p>custom_column_info</p>

<p>Hook for adding extra attributes to the column_info for a column.</p>

<p>Must be a coderef that returns a hashref with the extra attributes.</p>

<p>Receives the table object (which stringifies to the unqualified table name), column name and column_info.</p>

<p>For example:</p>

<pre><code>custom_column_info =&gt; sub {
my ($table, $column_name, $column_info) = @_;

if ($column_name eq 'dog' &amp;&amp; $column_info-&gt;{default_value} eq 'snoopy') {
    return { is_snoopy =&gt; 1 };
}
},
</code></pre>

<p>적용</p>

<pre><code>{
loader_options =&gt; {
    custom_column_info =&gt; sub {
    my ($table, $col_name, $col_info) = @_;

    if ($col_name eq 'password') {
        return { %{ $col_info },
            encode_column =&gt; 1,
            encode_class  =&gt; 'Digest',
            encode_args   =&gt; { algorithm =&gt; 'SHA-1', format =&gt; 'hex' },
            encode_check_method =&gt; 'check_password' };
    }

    if ($col_name eq 'created_at') {
        return { %{ $col_info }, set_on_create =&gt; 1, inflate_datetime =&gt; 1 };
    }

    if ($col_name eq 'update_at') {
        return { %{ $col_info }, set_on_create =&gt; 1, set_on_update =&gt; 1, inflate_datetime =&gt; 1 };
    }

    if ($col_name eq 'data') {
        return { %{ $col_info }, serializer_class =&gt; 'JSON' };
    }
    },
},
}
</code></pre>

<hr />

<h2>cpan dbicdump</h2>

<pre><code>connect_info =&gt; {
dsn               =&gt; "dbi:mysql:$DB_NAME:127.0.0.1",
user              =&gt; $DB_USER,
pass              =&gt; $DB_PASSWORD,
mysql_enable_utf8  =&gt; 1,
},
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[catalyst]]></title>
    <link href="http://rumidier.github.com/blog/2012/06/25/catalyst/"/>
    <updated>2012-06-25T19:11:00+09:00</updated>
    <id>http://rumidier.github.com/blog/2012/06/25/catalyst</id>
    <content type="html"><![CDATA[<h2>Error message</h2>

<p>기존에 사용되던 myweb.conf 파일의
ERROR 500.tt 메세지로 인해 에러 메세지가 제대로 보이지 않아
삭제 했습니다.</p>

<pre><code>$ vi myweb.conf
ERROR 500.tt 삭제
</code></pre>

<h2>Makefile.PL 모듈 추가</h2>

<pre><code>$ vi Makefile.PL
require DateTime::Format::MYSQL
</code></pre>

<h2>DB 날짜 입력</h2>

<p>lib/Silex/Web/Donnenwa/Controller/List.pm</p>

<p>등록시 날짜 생성을 위해 POSIX모듈을 사용합니다. 현재시간에</p>

<p>형식을 DB와 같이  &#8220;%Y-%m-%d% %H:%M:%S&#8221; 만들어 입력합니다.</p>

<pre><code>sub write :Local :Args(0) {
...
use POSIX qw(strftime);

my $time = strftime "%Y-%m-%d% %H:%M:%S", localtime;
my %row = (
applicant  =&gt; $c-&gt;req-&gt;params-&gt;{applicant},
title      =&gt; $c-&gt;req-&gt;params-&gt;{title},
content    =&gt; $c-&gt;req-&gt;params-&gt;{content},
created_on =&gt; "$time",
updated_on =&gt; "$time",
);
...
</code></pre>

<h2>list 페이지 쿼리문 수정</h2>

<p>lib/Silex/Web/Donnenwa/Controller/List.pm</p>

<p>생성될 날짜순으로 출력하기 위한 쿼리문 작성
search의 첫번째 인자는 where문으로써 무시 하기 위해서는 빈 해쉬레퍼를 줍니다.</p>

<pre><code>sub index :Path :Args(0) {
...
my $opt  = { 'order_by' =&gt; { -desc =&gt; 'me.created_on' } };
my $rs = $c-&gt;model('DonDB')-&gt;resultset('Charge')-&gt;search({}, $opt);
...
</code></pre>

<h2>list.tt, list/view.tt 페이지 수정</h2>

<p>root/templates/bootstrap/src/list/index.tt
root/templates/bootstrap/src/list/view.tt</p>

<p>날짜 0000-00-00 형식으로 출력 지정</p>

<pre><code>&lt;td align=center height=20 bgcolor=white&gt;[% list.created_on.ymd %]
</code></pre>

<h2>기타</h2>

<p>날짜 관련 예제</p>

<pre><code>#!/usr/bin/env perl 

use 5.010;
use strict;
use warnings;
use POSIX qw(strftime);
use DateTime;

say "POSOX";
say POSIX::strftime('%Y-%m-%d %H:%M:%S', localtime);

say "DateTime";
say DateTime-&gt;now( time_zone =&gt; 'local' )-&gt;strftime('%Y-%m-%d %H:%M:%S');
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[catalyst]]></title>
    <link href="http://rumidier.github.com/blog/2012/06/19/catalyst/"/>
    <updated>2012-06-19T17:31:00+09:00</updated>
    <id>http://rumidier.github.com/blog/2012/06/19/catalyst</id>
    <content type="html"><![CDATA[<h2>/list/write.tt 페이지</h2>

<p><a href="https://gist.github.com/2953030">write.tt</a></p>

<h2>form action</h2>

<pre><code>&lt;form action="[% c.uri_for('/list/write') %]" method="POST"&gt;
</code></pre>

<h2>direction setting</h2>

<pre><code>&lt;td colspan=10 align=center&gt;
  &lt;input type=submit class="btn btn-primary" value="글 저장하기"&gt;
  &amp;nbsp;&amp;nbsp;
  &lt;input type=reset class="btn btn-primary" value="다시 쓰기"&gt;
  &amp;nbsp;&amp;nbsp;
  &lt;a href="[% c.uri_for('/list') %]" class="btn btn-primary"&gt;되돌아가기&lt;/a&gt;
&lt;/td&gt;
</code></pre>

<h2>list -> write</h2>

<pre><code>$ lib/Silex/Web/Donnenwa/Controller/List.pm

sub write :Local :Args(0) {
my ( $self, $c ) = @_;

if ($c-&gt;req-&gt;method eq 'POST') {
    my %row = (
    name    =&gt; $c-&gt;req-&gt;params-&gt;{name},
    title   =&gt; $c-&gt;req-&gt;params-&gt;{title},
    content =&gt; $c-&gt;req-&gt;params-&gt;{content},
    );
    $c-&gt;model('DonDB')-&gt;resultset('List')-&gt;update_or_create(\%row);
    $c-&gt;res-&gt;redirect($c-&gt;uri_for('/list'));
}
}
</code></pre>

<h2>/list/view.tt 페이지</h2>

<p><a href="https://gist.github.com/2953088">view.tt</a></p>

<h2>인자 출력</h2>

<pre><code>// 제목
&lt;tr&gt;
  &lt;td height=20 colspan=4 align=center bgcolor=#999999&gt;
&lt;font color=white&gt;&lt;b&gt;[% users.title %]&lt;/b&gt;&lt;/font&gt;
  &lt;/td&gt;
&lt;/tr&gt;

// 이름
&lt;tr&gt;
  &lt;td width=50 height=20 align=center bgcolor=#EEEEEE&gt;글쓴이&lt;/td&gt;
  &lt;td width=240 bgcolor=white&gt;[% users.name %]&lt;/td&gt;
&lt;/tr&gt;

// 내용
&lt;tr&gt;
  &lt;td bgcolor=white colspan=4 style="table-layout:fixed;"&gt;
&lt;font color=black&gt;
  [% users.content %]
&lt;/font&gt;
  &lt;/td&gt;
&lt;/tr&gt;
</code></pre>

<h2>list page redirect</h2>

<pre><code>&lt;a href="[% c.uri_for('/list') %]" class="btn btn-primary"&gt;되돌아가기&lt;/a&gt;
</code></pre>

<h2>list -> view</h2>

<pre><code>$ lib/Silex/Web/Donnenwa/Controller/List.pm

sub view :Local :CaptureArgs(1) {
my ( $self, $c, $user_id) = @_;

my $rs = $c-&gt;model('DonDB')-&gt;resultset('List')-&gt;find($user_id);
$c-&gt;stash-&gt;{users} = $rs;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[catalyst]]></title>
    <link href="http://rumidier.github.com/blog/2012/06/18/catalyst/"/>
    <updated>2012-06-18T16:13:00+09:00</updated>
    <id>http://rumidier.github.com/blog/2012/06/18/catalyst</id>
    <content type="html"><![CDATA[<h2>기본 화면 출력후 무엇을 하지?</h2>

<h2>list.tt 페이지를 만들어 기본 게시판 화면을 꾸민다</h2>

<p>root/templates/bootstrap/src/list/index.tt</p>

<p>아래와 같이 기본 .tt를 생성한다. 아직까지는 list명단에
자료가 없기 때문에 아무것도 보이지 않는다.</p>

<p><a href="https://gist.github.com/2947721">index.tt</a></p>

<h2>DonDB.sql을 만들어 준다.</h2>

<p>INT == int(11), signed는 디폴트로 정의 되어 있다.</p>

<p>DEFAULT값은 절대 NULL이 되게 하여서는 안된다.</p>

<p>timestamp로 잡을시 문제가 될수 있다.</p>

<p>DATETIME는 만든날짜와 수정된 날짜가 있어야 문제를 줄일수 있다.</p>

<pre><code>CREATE TABLE charge (
id         INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
applicant  VARCHAR(32) NOT NULL DEFAULT '',
title      VARCHAR(128) NOT NULL DEFAULT '',
content    TEXT NOT NULL DEFAULT '',
created_on DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00',
updated_on DATETIME NOT NULL DEFAULT '0000-00-00 00:00:00'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
</code></pre>

<h2>DB 적용</h2>

<pre><code>$ mysql -u ID -p Don_db &lt; DonDB.sql
</code></pre>

<h2>DB 구성(Model)은 어떻게 할까?</h2>

<pre><code>$ ./script/silex_web_donnenwa_create.pl model DonDB DBIC::Schema \ 
Silex::Schema create=static dbi:mysql:DonDB_db:localhost ID PASSWORD
</code></pre>

<p>lib/Silex/Web/Donnenwa/Model/DonDB.pm 생성됨</p>

<h2>DB 구성 하면 늘어나는 모듈이 잇다.</h2>

<p>Makefile.PL 추가</p>

<pre><code>require Catalyst::Model::DBIC::Schema
require DBD::mysql
</code></pre>

<p>인스톨</p>

<pre><code>$ carton install
</code></pre>

<h2>DB 구성을 하면 어떻게 가져오게 될까?</h2>

<p>lib/Silex/Web/Donnenwa/Controller/List.pm</p>

<pre><code>sub index :Path :Args(0) {
my ( $self, $c ) = @_;

my $rs = $c-&gt;model('DonDB')-&gt;resultset('List');
$c-&gt;stash-&gt;{lists} = [ $rs-&gt;all ];
}
</code></pre>

<h2>마지막 화면 구성</h2>

<p>root/templates/bootstrap/src/list/index.tt
index.tt 안에 템플릿 툴킷 집어넣는데라고 표시 된곳에 집어 넣는다</p>

<pre><code>[% FOREACH list IN lists %]
  &lt;!-- 행 시작 --&gt;
  &lt;tr&gt;
&lt;!-- 번호 --&gt;
&lt;td height=20 bgcolor=white align=center&gt;
  &lt;p&gt;[% list.id %]&lt;/p&gt;
&lt;/td&gt;
&lt;!-- 번호 끝 --&gt;

&lt;!-- 제목 --&gt;
&lt;td height=20 bgcolor=white&gt;&amp;nbsp;
  &lt;p&gt;[% list.title %]&lt;/p&gt;
&lt;/td&gt;
&lt;!-- 제목 끝 --&gt;
&lt;!-- 이름 --&gt;
&lt;td align=center height=20 bgcolor=white&gt;
  &lt;font color=black&gt;
    &lt;p&gt;[% list.name %]&lt;/p&gt;
  &lt;/font&gt;
&lt;/td&gt;
&lt;!-- 이름 끝 --&gt;
&lt;!-- 날짜 --&gt;
&lt;td align=center height=20 bgcolor=white&gt;
  &lt;p&gt;날짜 다음&lt;/p&gt;
&lt;/td&gt;
&lt;!-- 날짜 끝 --&gt;
&lt;!-- 조회 수 --&gt;
&lt;td align=center height=20 bgcolor=white&gt;
  &lt;p&gt;조회수 나중에 구현&lt;/p&gt;
&lt;/td&gt;
&lt;!-- 조회 수 끝 --&gt;
  &lt;/tr&gt;
&lt;!-- 행 끝 --&gt;
[% END %]
</code></pre>

<p>가져 왔다 근데 한글이 깨진다
(DB 데이터 집어 넣을때도 utf8적용이 되야 한다.)</p>

<p>lib/Silex/Web/Donnenwa/Model/DonDB.pm</p>

<pre><code>connect_info =&gt; {
    dsn =&gt; 'dbi:mysql:auth_db:localhost',
    user =&gt; 'don',
    password =&gt; 'gksdud09',
}

추가
    mysql_enable_utf8 =&gt; 1,

connect_info =&gt; {
    dsn =&gt; 'dbi:mysql:auth_db:localhost',
    user =&gt; 'don',
    password =&gt; 'gksdud09',
    mysql_enable_utf8 =&gt; 1,
}
</code></pre>

<h2>추가사항</h2>

<p>현재 상태는 DB에 등록된 내용이 들어가 있는지 확인과 출력이 되는지 확인을 위해
만들어 졌다.</p>

<p>sql및 write버튼 미동작등 수행 할것이 많으 므로 기본 와꾸만 잡혀서 정보가 제대로 넘어
오는지 확인만 하자.</p>

<p>[참고]</p>

<p><a href="http://search.cpan.org/~bricas/Catalyst-Model-DBIC-0.17/lib/Catalyst/Model/DBIC.pm">Catalyst::Model::DBIC</a></p>

<p><a href="http://search.cpan.org/~rkitover/Catalyst-Model-DBIC-Schema-0.60/lib/Catalyst/Model/DBIC/Schema.pm">Catalyst::Model::DBIC::Schema</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Catalyst]]></title>
    <link href="http://rumidier.github.com/blog/2012/06/15/catalyst/"/>
    <updated>2012-06-15T17:56:00+09:00</updated>
    <id>http://rumidier.github.com/blog/2012/06/15/catalyst</id>
    <content type="html"><![CDATA[<h1>init catalyst project in silex</h1>

<p>카탈리스트 시작을 위해 Helper를 준비합니다.</p>

<pre><code>$ git clone git://github.com/aanoaa/Catalyst-Helper-View-TTSilex.git
...
$ git clone git://github.com/aanoaa/Catalyst-Helper-Carton.git
...
$ cd Catalyst-Helper-View-TTSilex/
$ git checkout develop
$ dzil build
...
$ cd Catalyst-Helper-View-TTSilex-v0.0.1/
$ perl Makefile.PL
...
$ make &amp;&amp; make install
...
$ cd ../../Catalyst-Helper-Carton/
$ dzil build
$ cd Catalyst-Helper-Carton-v0.0.1/
$ perl Makefile.PL
...
$ make &amp;&amp; make install
</code></pre>

<p>catalyst.pl을 사용 하여  Foo::Web을 생성합니다.</p>

<pre><code>$ cd ~/yourworkspace/
$ catalyst.pl Foo::Web
...
</code></pre>

<p>파일명을 수정하여 줍니다.</p>

<pre><code>$ cd Foo-Web/
$ mv foo_web.psgi app.psgi
</code></pre>

<p>스크립트를 사용하게 되면 .conf.new 파일이 생성이 되며 .conf파일에 붙여줍니다.</p>

<pre><code>$ script/foo_web_create.pl view Bootstrap TTSilex
...
$ vi foo_web.conf &lt;&lt;--- foo_web.conf.new
</code></pre>

<p>카툰을 설치 하고 Make 파일에 추가 하라는 메세지가 나옵니다.</p>

<pre><code>$ script/foo_web_create.pl Carton
...
$ vim Makefile.PL    # add dependencies
</code></pre>

<p>위의 단계에서 명시된 모듈 및 추가 필요 모듈</p>

<pre><code>//명시
requires "Starman";
requires "Devel::Cover";
requires "Perl::Metrics::Lite";
requires "TAP::Formatter::JUnit";

//추가
requires 'Catalyst::Plugin::Unicode::Encoding';
requires "Catalyst::View::TT";
</code></pre>

<p>한글 인코딩 문제</p>

<pre><code>$ lib/Foo/Web.pm

use utf8;
use Catalyst qw/
-Debug
ConfigLoader
Static::Simple
#추가
Unicode::Encoding
/;
</code></pre>

<p>인스톨</p>

<pre><code>$ carton install
...
</code></pre>

<p>부분 인스톨</p>

<pre><code>$ carton install &lt;모듈네임&gt; 합니다.
</code></pre>

<h2>Controller 생성</h2>

<pre><code>$ script/foo_web_create.pl controller List

$ cd lib/Foo/Web/Controller
$ vi List.pm
// 주석처리
# $c-&gt;response-&gt;body('Matched Foo::Web::Controller::List in List.');
</code></pre>

<h2>View 생성</h2>

<pre><code>$ mkdir root/templates/bootstap/src/list
$ cd root/templates/bootstrap/src/list
$ vi index.tt
  &lt;p&gt;나는 지금 한글을 테스트 중입니다.&lt;/p&gt; 작성
</code></pre>

<h2>실행</h2>

<pre><code>$ ./run
</code></pre>

<h2>.gitignore</h2>

<pre><code># inspire by github/gitignore
blib/
.build/
_build/
cover_db/
inc/
Build
Build.bat
.last_cover_stats
Makefile
Makefile.old
MANIFEST.bak
META.yml
MYMETA.yml
nytprof.out
pm_to_blib
# custom
local/
.sass-cache/
tt_cache/
.carton/
*.log
session
MYMETA.json
carton.lock
</code></pre>

<h2>script/bootstrap.pl</h2>

<p>이건 헬퍼 없습니다.
프로젝트마다 손으로 복사합니다.</p>

<p>https://gist.github.com/2761721</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learn jQuery 5장]]></title>
    <link href="http://rumidier.github.com/blog/2012/06/13/learn-jquery-5jang/"/>
    <updated>2012-06-13T17:29:00+09:00</updated>
    <id>http://rumidier.github.com/blog/2012/06/13/learn-jquery-5jang</id>
    <content type="html"><![CDATA[<h2>Source</h2>

<p><a href="https://gist.github.com/2922803">예제.html</a></p>

<p><a href="https://gist.github.com/2922807">예제 css </a></p>

<p><a href="https://gist.github.com/2922804">예제 js  </a></p>

<h2>본문</h2>

<h2>속성 추가하기</h2>

<p>id속성값을 개별적으로 attr()으로 적용 해주기 위해 each()를 사용하여 적용하여 주고 있다.
index는 0부터 시작하여 증가한다.</p>

<pre><code>$(document).ready(function() {
  $('div.chapter a[href*=wikipedia]').each(function(index) {
var $thisLink = $(this);
$(this).attr({
  'rel': 'external',
  'id': 'wikilink-' + index,
  'title': $thisLink.text() + '에 대한 자세한 정보는 위키 피디아에 있습니다.'
});
  });
});
</code></pre>

<h2>앵커 삽입</h2>

<p>앵커 위치를 정하기 위해 body에 prependTo()로 삽입한다.
앵커 버튼이 굳이 다 있을 필요는 없고 화면 밖에 존재 부터 하기 위해
p:gt(4) 5번째(0부터 시작) 문단 부터 적용 시킨다</p>

<pre><code>$('&lt;a href="#top"&gt;맨 앞으로 돌아가기&lt;/a&gt;').insertAfter('div.chapter p:gt(4)');
$('&lt;a id="top" name="top"&gt;&lt;/a&gt;').prependTo('body');
</code></pre>

<h2>주석 표시, 숫자 부여, 컨텍스트 연결</h2>

<p>챕터가 끝난지점 후에 리스트 목록인 &gt;ol&lt;만들어준다.
클래스가 footnote</p>

<pre><code>$('&lt;ol id="notes"&gt;&lt;/ol&gt;').insertAfter('div.chapter');
$('span.footnote').each(function(index) {
  $(this).before('&lt;a href="#foot-note-' + (index+1) +
'" id="context-' + (index+1) + '" class="context"&gt;&lt;sup&gt;'
+ (index+1) + '&lt;/sup&gt;&lt;/a&gt;')
  .appendTo('#notes')
  .append( '&amp;nbsp;(&lt;a href="#context-' + (index+1) + '"&gt;context &lt;/a&gt;)' )
  .wrap('&lt;li id="foot-note-' + (index+1) + '"&gt;&lt;/li&gt;');
});
</code></pre>

<h2>Command Action</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learn jQuery 4장]]></title>
    <link href="http://rumidier.github.com/blog/2012/06/12/learn-jquery-4jang/"/>
    <updated>2012-06-12T16:49:00+09:00</updated>
    <id>http://rumidier.github.com/blog/2012/06/12/learn-jquery-4jang</id>
    <content type="html"><![CDATA[<h2>Source</h2>

<p><a href="https://gist.github.com/2915965">예제.html</a></p>

<p><a href="https://gist.github.com/2915963">예제 css </a></p>

<p><a href="https://gist.github.com/2915969">예제 js  </a></p>

<h2>본문</h2>

<h2>인라인 CSS 변경</h2>

<p>폰트 크기 구하기</p>

<pre><code>$('div.speech').css('fontSize')
</code></pre>

<p>반환된 값이 숫자와 단위 문자열이 합쳐져 있으므로 각각 나누기 위해 변수를 따로 저장
변수 이름에 $는 변수명에 쓰이며 jQuery객체를 저장하고 있다는 의미로 사용된다.</p>

<pre><code>var $speech     = $('div.speech');
var currentSize = $speech.css('fontSize');
</code></pre>

<p>문자열에서 숫자까지만 변환하여 추출(10진수 옵션 설정)
숫자가 아니면 NaN(Not a Number)반환</p>

<pre><code>var num         = parseFloat(currentSize, 10);
</code></pre>

<p>fontSize의 유닛을 구함(px, em)</p>

<pre><code>var unit        = currentSize.slice(-2);
</code></pre>

<p>현재 클릭된 버튼의 아이디를 확인하여 숫자연산 후
css에 fontSize 적용</p>

<pre><code>if (this.id == 'switcher-large') {
  num *= 1.4;
} else if (this.id == 'switcher-small') {
  num /= 1.4;
}
$speech.css('fontSize', num + unit);
</code></pre>

<figure class='code'><figcaption><span>css-part </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$('div.button').click(function() {
</span><span class='line'>  var $speech     = $('div.speech');
</span><span class='line'>  var currentSize = $speech.css('fontSize');
</span><span class='line'>  var num         = parseFloat(currentSize, 10);
</span><span class='line'>  var unit        = currentSize.slice(-2);
</span><span class='line'>
</span><span class='line'>  if (this.id == 'switcher-large') {
</span><span class='line'>    num *= 1.4;
</span><span class='line'>  } else if (this.id == 'switcher-small') {
</span><span class='line'>    num /= 1.4;
</span><span class='line'>  }
</span><span class='line'>  $speech.css('fontSize', num + unit);
</span><span class='line'>});</span></code></pre></td></tr></table></div></figure>


<h2>hide와 show</h2>

<p>jQuery 효과에 속도를 지정할때는 &#8216;slow&#8217;, &#8216;normal&#8217;, &#8216;fast&#8217;(각각 0.6, 0.4 0.2초)를 지정할수 있으며
밀리초 단위의 시간을 조정할수 있다(근데 난 차이를 모르겠다..)</p>

<pre><code>$('document).ready(function() {
  $('div.speech p:eq(1)').hide();
  $('span.more').click(function() {
$('div.sppech p:eq(1)').show();
$(this).hide();
  });
});
</code></pre>

<p>show는 .animate()메서드의 약식 메서드이다.</p>

<pre><code>$(document).ready(function() {
  $('p:eq(1)').hide();
  $('span.more').click(function() {
$('p:eq(1)').animate({height: 'show', width: 'show', opactity: 'show'}, 'slow');
$(this).hide();
  });
});
</code></pre>

<h2>사용자형 애니메이션 생성하기</h2>

<p>버튼의 높이를 키우면서 이동, 이동이 멈추면 크기 고정</p>

<pre><code>$(document).ready(function() {
  $('div.label').click(function() {
$('div.butoon').animate({left: 650, height: 38}, 'slow');
  });
});
</code></pre>

<h2>숫자 이해하기</h2>

<p>height의 38값인 이유는 우리가 버튼을 50으로 만들기 위해서 이다.
css에 padding은 5px, border는 1px 로 정의 하였으므로 top + bottom값을
더한후(12) 50 - 12 = 38값이 나오게 되었다.</p>

<h2>CSS로 위치 변경</h2>

<p>.animate()를 사용하여 작업할때 CSS속성이 relative 또는 absolute로 설정 되어있어야 한다
모든 블록 요소가 가지는 CSS position 속성은 static이다.</p>

<h2>버튼의 너비 계산</h2>

<p>버튼의 넓이와 패딩 보더 넓이를 모두 구하여 더해준후 div.speech p의 넓이에 맞추어서
값을 구하였다. 그렇게 함으로써 글자 오른쪽 모서리에 맞춤이 이루어 진다.</p>

<pre><code>$(document).ready(function() {
  $('div.label').click(function() {
  var paraWidth        = $('div.speech p').width();
  var $button          = $('div.button');
  var buttonWidth      = $button.width();
  var paddingRight     = $button.css('paddingRight');
  var paddingLeft      = $button.css('paddingLeft');
  var borderRightWidth = $button.css('borderRightWidth');
  var borderLeftWidth  = $button.css('borderLeftWidth');

  //총너비 연산
  var totalButtonWidth =
  parseInt(buttonWidth, 10) +
  parseInt(paddingRight, 10) +
  parseInt(paddingLeft, 10) +
  parseInt(borderRightWidth, 10) +
  parseInt(borderLeftWidth, 10);
  var rightSide = paraWidth - totalButtonWiidth;
  $button.animate({left: rightSide, height: 38}, 'slow');
  });
});
</code></pre>

<h2>동시효과</h2>

<p>불투명해짐과 배경색이 동시에 변경되며 이동을 한후 불투명도가 들어오고 사라지게 된다</p>

<pre><code>$('div.label').click(function() {
  $('div.button')
  .fadeTo('slow', 0.5)
  .animate({left: 650}, 'slow')
  .fadeTo('slow', 1.0)
  .css('backgroundColor', '#f00')
  .slideUP('slow');
});
</code></pre>

<h2>연속효과</h2>

<p>버튼을 클릭 하게 되면 투명해지고 이동한다. 그리고 투명도를 다시 돌리고나서
배경색을 변경한다. 그리고 사라진다 이게 연속적으로 이루어 지게 되어있다.
콜백을 이용하여 효과들이 모두 진행된 후에 그 다음 순서로 배경색을 바꾸는
비효과 메서드를 적용 하였다.</p>

<pre><code>$('div.label').click(function() {
  $('div.button')
  .fadeTo('slow', 0.5)
  .animate({left: 650}, 'slow')
  .fadeTo('slow', 1.0, function() {
$(this).css('backgroundColor', '#f00')
  }).slideUP('slow');
});
</code></pre>

<h2>다중 효과</h2>

<pre><code>$('div.speech p:eq(3)').css('backgroundColor', '#fcf').hide();
$('div.speech p:eq(2)').css('backgroundColor', '#cff').click(function() {
  var $thisPar = $(this)
  $(this).next().slideDown('slow', function() {
$thisPar.slideUp('slow');
  });
});
</code></pre>

<h2>Command action</h2>

<ul>
<li><p>fadeIn()과 fadeOut(): 불투명도(opacity)</p>

<p><strong>fadeOut(speed, callback)</strong></p>

<p>일치하는 엘리먼트 중 드러난 엘리먼트의 불투명도 0%로 줄여가면서 화면에서 제거한다. 불투명
도가 변경되는 지속시간은 speed 매개변수에 따라 변한다. 이미 감춰진 엘리먼트는 영향을 받지 않
는다.</p>

<p><strong>매개변수</strong></p>

<p>speed</p>

<p>(Numbe|String)효과의 지속 시간을 1/1000초 단위의 숫자 또는 미리 정의된 문자열 slow, normal, fast</p>

<p>가운데 하나로 명시한다. 생략되면 기본값인 normal을 이용한다.</p>

<p>callback</p>

<p>(Function) 선택사항으로 애니메이션이 완료된 뒤 호출되는 함수다. 이 함수는 어떤 매개변수도
받지 않는다. 하지만 애니메이션이 수행되는 엘리먼트가 함수 콘텍스트인 this로 설정된다.</p>

<p><strong>반환값</strong></p>

<p>확장집합</p></li>
<li><p>fadeTo: 불투명도(opacity)</p>

<p><strong>fadeOut(speed, opacity, callback)</strong></p>

<p>확장 엘리먼트의 불투명도를 현재의 러정 값에서 opacity 매개변수 값으로 설정한다.</p>

<p><strong>매개변수</strong></p>

<p>speed</p>

<p>(Numbe|String)효과의 지속 시간을 1/1000초 단위의 숫자 또는 미리 정의된 문자열 slow, normal, fast</p>

<p>가운데 하나로 명시한다. 생략되면 기본값인 normal을 이용한다.</p>

<p>opacity (Number)</p>

<p>(Number) 0.0에서 1.0 사이의 값으로 엘리먼트에 적용될 불투명도 값</p>

<p>callback</p>

<p>(Function) 선택사항으로 애니메이션이 완료된 뒤 호출되는 함수다. 이 함수는 어떤 매개변수도
받지 않는다. 하지만 애니메이션이 수행되는 엘리먼트가 함수 콘텍스트인 this로 설정된다.</p>

<p><strong>반환값</strong></p>

<p>확장집합</p></li>
<li><p>slideDown()과 slideUp(): 높이(height)</p>

<p><strong>slideDown(speed, callback)</strong></p>

<p>감춰진 모든 일치하는 엘리먼트가 높이 값이 증가하면서 나타난다. 드러나 잇는 엘리먼트는
영향을 받지 않는다</p>

<p><strong>매개변수</strong></p>

<p>speed</p>

<p>(Numbe|String)효과의 지속 시간을 1/1000초 단위의 숫자 또는 미리 정의된 문자열 slow, normal, fast</p>

<p>  가운데 하나로 명시한다. 생략되면 기본값인 normal을 이용한다.</p>

<p>callback</p>

<p>  (Function) 선택사항으로 애니메이션이 완료된 뒤 호출되는 함수다. 이 함수는 어떤 매개변수도
  받지 않는다. 하지만 애니메이션이 수행되는 엘리먼트가 함수 콘텍스트인 this로 설정된다.</p>

<p><strong>반환값</strong></p>

<p>확장집합</p>

<p><strong>slideDown(speed, callback)</strong></p>

<p>감춰진 모든 일치하는 엘리먼트가 점차적으로 높이 값이 감소하면서 화면에서 제거된다.</p>

<p><strong>매개변수</strong></p>

<p>speed</p>

<p>  (Numbe|String)효과의 지속 시간을 1/1000초 단위의 숫자 또는 미리 정의된 문자열 slow, normal, fast</p>

<p>  가운데 하나로 명시한다. 생략되면 기본값인 normal을 이용한다.</p>

<p>callback</p>

<p>  (Function) 선택사항으로 애니메이션이 완료된 뒤 호출되는 함수다. 이 함수는 어떤 매개변수도
  받지 않는다. 하지만 애니메이션이 수행되는 엘리먼트가 함수 콘텍스트인 this로 설정된다.</p>

<p><strong>반환값</strong></p>

<p>확장집합</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learn jQuery 3장]]></title>
    <link href="http://rumidier.github.com/blog/2012/06/11/learn-jquery-3jang/"/>
    <updated>2012-06-11T18:17:00+09:00</updated>
    <id>http://rumidier.github.com/blog/2012/06/11/learn-jquery-3jang</id>
    <content type="html"><![CDATA[<h2>Source</h2>

<p><a href="https://gist.github.com/2909211">예제.html</a></p>

<p><a href="https://gist.github.com/2909213">예제 css </a></p>

<p><a href="https://gist.github.com/2909224">예제 js  </a></p>

<h2>본문 - 이벤트 트리거 사용하는 방법</h2>

<h2>button click event</h2>

<p>페이지 시작시 노말페이지로 보이도록 모든 클래스를 해제한다.
removeClass()는 다른 파악되지 않은 Class까지 해제 하지만 현재 예제
코드 에서는 생각치 않도록 쓴다.</p>

<pre><code>$('body').removeClass();
</code></pre>

<p>현재 버튼이 클릭된 id값을 확인하여 일치 하였을경우
클래스를 추가 하도록 한다.</p>

<pre><code>if (this.id == 'switcher-narrow') {
  $('body').addClass('narrow');
}
else if (this.id == 'switcher-large') {
  $('body').addClass('large');
}
</code></pre>

<p>강조되는 글씨를 표현하기 위해 우선 클래스를 해제하고
현재 버튼에 클래스를 추가 해준다.</p>

<pre><code>$('#switcher .button').removeClass('selected');
$(this).addClass('selected');
</code></pre>

<p>이벤트 객체 사용시 버블링을 중단 하기 위해 다음과 같이 추가해 준다.
(버블링을 추가안해줄시 노말 버튼 클릭시에도 버튼칸이 사라지게 된다.)</p>

<pre><code>event.stopPropagation();
</code></pre>

<p>부분 코드</p>

<figure class='code'><figcaption><span>부분코드 - 01 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$('#switcher .button').click(function(event) {
</span><span class='line'>  $('body').removeClass();
</span><span class='line'>
</span><span class='line'>  if (this.id == 'switcher-narrow') {
</span><span class='line'>    $('body').addClass('narrow');
</span><span class='line'>  }
</span><span class='line'>  else if (this.id == 'switcher-large') {
</span><span class='line'>    $('body').addClass('large');
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  $('#switcher .button').removeClass('selected');
</span><span class='line'>  $(this).addClass('selected');
</span><span class='line'>
</span><span class='line'>  event.stopPropagation();
</span><span class='line'>});</span></code></pre></td></tr></table></div></figure>


<h2>버튼 강조하기</h2>

<p>버튼에 hover(마우스 가져다 대면) 띠면(체인으로) hover삭제</p>

<p>부분 코드</p>

<figure class='code'><figcaption><span>부분코드 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$('#switcher .button').hover(function() {
</span><span class='line'>    $(this).addClass('hover');
</span><span class='line'>    }, function() {
</span><span class='line'>      $(this).removeClass('hover');
</span><span class='line'>  });</span></code></pre></td></tr></table></div></figure>


<h2>이벤트 핸들러</h2>

<p>핸들러를 나중에 다시 사용할 수 있도록 핸들러 함수에 이름을 부여</p>

<pre><code>var toggleStyleSwitcher = function() {
  $('switcher .button').toggleClass('hidden');
};
</code></pre>

<p>핸들러를 활성화 시켜준다.</p>

<pre><code>$('#switcher').click(toggleStyleSwitcher);
</code></pre>

<p>노말 상태에서만 토글 기능 활성화</p>

<pre><code>$('switcher-normal').click(function() {
  $('#switcher').click(toggleStyleSwitcher);
});

$('#switcher-narrow, #switcher-large').click(function() {
  $('#switcher').unbind('click', toggleStyleSwitcher);
});
</code></pre>

<p>시작시 접힘 기능(인자를 지정하지 않는경우 히벤트에 해당하는 행위를 발생시킴)</p>

<pre><code>$('#switcher').click();
</code></pre>

<h2>Command action</h2>

<p><strong>unbind(event Type, listener)</strong></p>

<p><strong>unbind(event)</strong></p>

<p>확장 집합의 모든 엘리먼트에서 전달된 매개변수에 따라 핸들러를 선택적으로 제거한다.</p>

<p>매개변수를 제공하지 않으면 엘리먼트의 모든 리스터를 제거한다.</p>

<p><strong>매개변수</strong></p>

<p>  <strong>eventType</strong></p>

<pre><code>   (String)매개변수를 제공하면 지정된 이벤트 타입에 할당된 리스너만 제거한다.
</code></pre>

<p>  <strong>listener</strong></p>

<pre><code>  (Function)매개변수를 제공하면 지정된 리스너와 동일한 것만 제거한다.
</code></pre>

<p>  <strong>eventType</strong></p>

<pre><code>  (Event) Event 인스턴스의 정보로 알 수 있는 이벤트가 발생했을 대 호출될 리스너를
  제거한다
</code></pre>

<p><strong>반환값</strong></p>

<p>확장 집합</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lear jQuery 2장-02]]></title>
    <link href="http://rumidier.github.com/blog/2012/06/11/lear-jquery-2jang-02/"/>
    <updated>2012-06-11T14:26:00+09:00</updated>
    <id>http://rumidier.github.com/blog/2012/06/11/lear-jquery-2jang-02</id>
    <content type="html"><![CDATA[<h2>Source</h2>

<p><a href="https://gist.github.com/2908591">예제.html</a></p>

<p><a href="https://gist.github.com/2908588">예제 css </a></p>

<p><a href="https://gist.github.com/2908628">예제 js  </a></p>

<h2>본문 - 테이블행에 징검다리 색깔 입히기</h2>

<h2>사용자 정의 선택자</h2>

<p>class명 horizontal를 가진 div 집합의 두번째 항목 선택
$(&#8216;div.horizontal:eq(1)&#8217;)
두번째 항목이 1인 이유는 자바스크립트 배열에서 인덱스는
0에서 부터 시작 하며 jQuery또한 마찬가지이다.
단, css는 1을 기반으로 한다.</p>

<p>헤더 행 스타일 입히기</p>

<pre><code>$('th').addClass('table-heading');
//&lt;th class=table-heading'&gt;
</code></pre>

<p>odd,even 색 입히기</p>

<pre><code>$('tr:not(:has(th)):even').addClass('even');
$('tr:not(:has(th)):odd').addClass('odd');
//odd와 even의 색 정의는 css에 정의 되어있다.
</code></pre>

<p>테이블에서 특정단어 포함 셀만 강조</p>

<pre><code>$('td:contains("Henry")').addClass('highlight');
//td에 Henry 단어가 포함 된열 강조
// highlight의 색 정의는 .css에 정의 되어있다.
</code></pre>

<p>Henry를 포함한 셀을 찾아낸후 모든 하위레벨에 클래스 추가</p>

<pre><code>$('td:contains("Henry")').siblings().addClass('highlight');
</code></pre>

<p>Henry를 포함한 부모를 찾아 인덱스가 0보다 큰셀들을(0은 최상 부모) 순회하면 클래스추가</p>

<pre><code>$('td:contains("Henry")').parent().find('td:gt(0)').addClass('highlight');
</code></pre>

<p>Henry를 포함한 셀을 찾아 부모를 찾고 그 안의 모든 셀을 찾은후 Henry를 포함한 셀을
필터링한후 클래스추가(Henry만 적용을 하지 않음)</p>

<pre><code>$('td:contains("Henry")').parent().find('td').not(':contains('Henry")')).addClass('highlight');
</code></pre>

<p>Henry를 포함하고 있는 셀을 찾아낸 후에 그것의 부모를 얻어와서 자식들 중에 두번째 셀을
찾아서 클래스를 추가하고 가장 최근의 .find()를 취소한 후에 다시 자식들 중에서 세 번째 셀을
찾아서 클래스를 추가한다.</p>

<pre><code>$('td:contains("Henry")') //Henry셀을 찾고
.parent()  //부모를 찾아서
.find('td:eq(1)') //부모의 두번째 셀을 찾아
.addClass('highlight') //강조 하고(클래스 추가)
.end() // 다시 부모로 돌아와
.find('td:eq(2)') // 세번째를 찾아서
.addClass('highlight'); //강조 한다(클래스 추가)
</code></pre>

<h2>Command Action</h2>

<p><strong>addClass(names)</strong></p>

<p>매개변수로 전달된 하나 이상되는 클래스명을 확장 집합의 모든 엘리먼트에 추가한다.</p>

<p><strong>매개변수</strong></p>

<p>names (String)클래스명을 포함 하는 문자열, 여러 클래스명을 추가할 때는 공백으로 구분</p>

<p>반환값 - 확장집합</p>

<hr />

<p><strong>removeClass(names)</strong></p>

<p>매개변수로 전달된 하나 이상되는 클래스명을 확장 집합의 모든 엘리먼트에서 삭제한다.</p>

<p><strong>매개변수</strong></p>

<p>names (String)클래스명을 포함 하는 문자열, 여러 클래스명을 추가할 때는 공백으로 구분</p>

<p><strong>반환값</strong></p>

<p>확장집합</p>

<hr />

<p><strong>siblings()</strong></p>

<p>확장 엘리먼트의 모든 형제를포함 하는 확장 집합을 반환</p>

<hr />

<p><strong>find(selector)</strong></p>

<p>  원본의 모든 엘리먼트 중 전달된 셀렉터 표현식과 일치하는 엘리먼트로 구성된 새로운 확장 집합
  을 반환한다. 확장 집합에 포함된 엘리먼트의 자손 엘리먼트도 전달된 표현식과 일치하는지 평가</p>

<p><strong>매개변수</strong></p>

<p>selector (String) 반환될 집합의 일부가 될 엘리먼트가 일치하는 셀렉터</p>

<p><strong>반환값</strong></p>

<p>새로 생성된 확장 집합</p>

<p>변수 wrappedSet에 할당된 확장 집합에서 p문단 인용문(&gt;cite&lt; 엘리먼트)로 구성된 확장 집합은
두가지로 표현 된다</p>

<pre><code>wrappedSet.find('p cite')
$('p cite', wrappedSet)
</code></pre>

<hr />

<p><strong>parent()</strong></p>

<p>  확장 집합 내에 있는 모든 확장 엘리먼트의 바로 위 부모로 구성된 확장 집합을 반환한다.</p>

<p><strong>parents()</strong></p>

<p>  모든 확장 엘리먼트의 조상으로 구성된 확장 집합을 반환한다. 바로 위 부모와
  상위의 모든 소상이 포함 되지만 문서 루트(document root)는 포함 되지 않는다(?)</p>

<hr />

<p><strong>end()</strong></p>

<p>  jQuery 커맨드 체인에서 사용하며 이전 확장 집합으로 돌아간다.</p>

<p><strong>매개변수</strong></p>

<p>  없음</p>

<p><strong>반환값</strong></p>

<p>이전 확장 집합</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jQuery-01]]></title>
    <link href="http://rumidier.github.com/blog/2012/05/30/jquery-01/"/>
    <updated>2012-05-30T17:45:00+09:00</updated>
    <id>http://rumidier.github.com/blog/2012/05/30/jquery-01</id>
    <content type="html"><![CDATA[<h3>DOM 조작 메서드 핵심정리(Le-05)</h3>

<p>DOM을 조작할 수 있도록 jQuery가 제공하는 메서드들은 광범위하기 때문에 어떤 작업을
처리할 때 어떤 메서드들이 어느 경우에 도움을 줄 수 있는지를 한눈에 보여줄 수 있도록
관련된 메서드들을 기능별 범주로 나누어 보았다.</p>

<ol>
<li><p>새로운 요소를 검색된 요소 <strong>안에</strong> 삽입하기 위한 메서드</p>

<ul>
<li>.append()</li>
<li>.appendTo()</li>
<li>.prepend()</li>
<li>.prependTo()</li>
</ul>
</li>
<li><p>새로운 요소를 검색된 요소 <strong>전/후에</strong> 삽입하기 위한 메서드</p>

<ul>
<li>.after()</li>
<li>.insertAfter()</li>
<li>.before()</li>
<li>.insertBefore()</li>
</ul>
</li>
<li><p>새로운 요소로 검색된 요소를 <strong>감싸면서</strong> 삽입하기 위한 메서드</p>

<ul>
<li>.wrap()</li>
</ul>
</li>
<li><p>검색된 요소를 새로운 요소 또는 텍스트로 대치하기 위한 메서드</p>

<ul>
<li>.html()</li>
<li>.text()</li>
</ul>
</li>
<li><p>실제 삭제 하지 않고 도큐먼트에서 검색된 요소와 자식들을 <strong>제거하기</strong> 위한 메서드</p>

<ul>
<li>.remove()</li>
</ul>
</li>
</ol>


<h3>요약</h3>

<p>DOM과 관련된 jQuery 메서드를 사용하여 콘텐츠를 생성해보거나 복사하는 데 사용하기도 하고 조립하거나
장식하는 데에도 사용하였다. 그리고 웹 페이지상의 문장을 주석으로 변경해 보거나 인용표시나 링크로
또는 스타일이 적용된 인용 문구로 변경해 볼 때에도 jQuery 메서드들을 사용해 보았다</p>
]]></content>
  </entry>
  
</feed>
