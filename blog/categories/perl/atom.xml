<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: perl | Meadows of wild horses]]></title>
  <link href="http://rumidier.github.com/blog/categories/perl/atom.xml" rel="self"/>
  <link href="http://rumidier.github.com/"/>
  <updated>2012-11-28T20:14:15+09:00</updated>
  <id>http://rumidier.github.com/</id>
  <author>
    <name><![CDATA[rumidier]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Perl]]></title>
    <link href="http://rumidier.github.com/blog/2012/11/27/perl/"/>
    <updated>2012-11-27T15:29:00+09:00</updated>
    <id>http://rumidier.github.com/blog/2012/11/27/perl</id>
    <content type="html"><![CDATA[<p>해당 되는 파일의 이름을 찾아 그 안에서 정규 표현식에 해당 되는 문자열을 치환 해주는 기능</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>perl -pi -e <span class="s1">&#39;s/scripts/scripts.coffee/g&#39;</span> &lt;code&gt;find . -name <span class="s1">&#39;*.tt&#39;</span>&lt;/code&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Side-function]]></title>
    <link href="http://rumidier.github.com/blog/2012/07/12/side-function/"/>
    <updated>2012-07-12T14:03:00+09:00</updated>
    <id>http://rumidier.github.com/blog/2012/07/12/side-function</id>
    <content type="html"><![CDATA[<h2>Action - approval, refuse</h2>

<p><a href="https://gist.github.com/3096325">approval</a></p>

<p><a href="https://gist.github.com/3096321">refuse</a></p>

<p>Approval은 청구 목록에 대하여 승인 기능을
refuse는 청구 목렉에 대하여 거부 기능을 가지게 된다.</p>

<p>승인 기능은 두가지 상황에서 선택 할수 있게 된다.
/list/view/user_num과 전체 list상태, 대기 리스트 상태, 거부 리스트 상태
에서 활성화가 되고 action을 취할수 있게 한다.</p>

<p>거부 기능은 두가지 상황에서 선택 할수 있게 된다.
/list/view/user_num과 전체 list상태, 대기 리스트 상태, 승인 리스트 상태
에서 활성화가 되고 action 을 취할수 있게 한다.</p>

<p>/list/view/user_id</p>

<p>아래와 같이 id 값과 함께 전달 할수 있다.</p>

<pre><code>&lt;a href="[% c.uri_for('/list/approval', charge.id) %]" class="btn btn-primary"&gt;승인&lt;/a&gt;
&lt;a href="[% c.uri_for('/list/refuse', charge.id) %]" class="btn btn-primary"&gt;거부&lt;/a&gt;
</code></pre>

<p>CaputreArgs(1) 옵션으로 $id 값(들)을 받을수 있게 된다.</p>

<pre><code>sub approval :Local :CaptureArgs(1) {
    my ( $self, $c, $id ) = @_;
    my @target_ids = split ',', $id;

sub refuse :Local :CaptureArgs(1) {
my ( $self, $c, $id ) = @_;
my @target_ids = split ',', $id;
</code></pre>

<p>@target_id의 모든 값(들)을 status값이 2 or 3로 업데이트 한다.
업데이트는 검색을 한 값들을 대상으로 update를 하게 된다.</p>

<pre><code>$ vi root/templates/default/src/list

# 승인
my $approval = $c-&gt;model('MyApp_DB')-&gt;resultset('Charge')-&gt;search({ id =&gt; { -in
        =&gt; \@target_ids } })-&gt;update_all({ status =&gt; '2' });
# 거부
my $refuse = $c-&gt;model('MyApp_DB')-&gt;resultset('Charge')-&gt;search({ id =&gt; { -in
        =&gt; \@target_ids } })-&gt;update_all({ status =&gt; '3' });
</code></pre>

<p>flash기능으로 messages값을 전달하여 조건에 맞을시 메세지를 출력 시키도록 한다.(/list/index.tt 참고)
조건은 approval, refuse기능이 정상 작동 되었는지를 검사 하게 된다.</p>

<pre><code>if ($query_status) {
    $c-&gt;flash-&gt;{messages} = 'Success message.';
}
else {
    $c-&gt;flash-&gt;{messages} = 'No status Item.';
}
</code></pre>

<p>템플릿에 쓰일 status값과 함께 전체 목록으로 redirect 시키도록 한다.</p>

<pre><code>$c-&gt;stash-&gt;{status} = '2'; #상태에 맞는 status값
$c-&gt;res-&gt;redirect($c-&gt;uri_for('/list'));
</code></pre>

<h2>Action - delete</h2>

<p><a href="https://gist.github.com/3096329">delete</a></p>

<p>승인 기능은 두가지 상황에서 선택 할수 있게 된다.
/list/view/user_num과 전체 list상태, 대기, 거부, 수정 상태
 에서 활성화가 되고 action을 취할수 있게 한다.</p>

<pre><code>$ vi root/templates/default/src/list
&lt;a href="[% c.uri_for('/list/delete', charge.id) %]" class="btn btn-primary"&gt;삭제&lt;/a&gt;
</code></pre>

<p>다른 기능과 같이 CaptureArgs(1)를 받는다.</p>

<pre><code>sub delete :Local :CaptureArgs(1) {
my ( $self, $c, $id ) = @_;
my @target_ids = split ',', $id;
</code></pre>

<p>다른 기능과 달리 update_all 이 아닌 delete_all를 통하여 내용을 삭제 한다.</p>

<pre><code>my $charge = $c-&gt;model('DonDB')-&gt;resultset('Charge')-&gt;search({ id =&gt; { -in =&gt; \@target_ids } })-&gt;delete_all;
</code></pre>

<h2>CPAN</h2>

<p><a href="https://metacpan.org/module/DBIx::Class::Manual::DocMap">DBIx::Class::Manual::DocMap</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[list-edit]]></title>
    <link href="http://rumidier.github.com/blog/2012/07/12/list-edit/"/>
    <updated>2012-07-12T13:56:00+09:00</updated>
    <id>http://rumidier.github.com/blog/2012/07/12/list-edit</id>
    <content type="html"><![CDATA[<h2>청구 내역 수정</h2>

<p><a href="https://gist.github.com/3095912">List-edit-action</a></p>

<p>수정 되어야할 $edit_id를 받을수 있어햐 한다.</p>

<pre><code>sub edit :Local :CaptureArgs(1) {
my ( $self, $c, $edit_id ) = @_;
</code></pre>

<p>수정할 폼을 제출 했을때 업데이트 동작 혹은 정보 출력을 하여야 한다.</p>

<pre><code>if ($c-&gt;req-&gt;method eq 'POST') {
    my @messages;

    push @messages, 'amount is invaild' if ($c-&gt;req-&gt;params-&gt;{amount} !~ /^\d+$/);
    push @messages, 'title is required' unless ($c-&gt;req-&gt;params-&gt;{title});

    if (@messages) {
    $c-&gt;flash(
        messages =&gt; @messages,
        comment  =&gt; $c-&gt;req-&gt;params-&gt;{comment},
        title    =&gt; $c-&gt;req-&gt;params-&gt;{title},
        amount   =&gt; $c-&gt;req-&gt;params-&gt;{amount},
    );

    return $c-&gt;res-&gt;redirect($c-&gt;uri_for("/list/view/$c-&gt;req-&gt;params-&gt;{charge_id}"));
    }

    my $time = strftime "%Y-%m-%d %H:%M:%S", localtime;
    my %row = (
    id         =&gt; $c-&gt;req-&gt;params-&gt;{charge_id},
    amount     =&gt; $c-&gt;req-&gt;params-&gt;{amount},
    user       =&gt; $c-&gt;req-&gt;params-&gt;{charge_user},
    title      =&gt; $c-&gt;req-&gt;params-&gt;{title},
    comment    =&gt; $c-&gt;req-&gt;params-&gt;{comment},
    updated_on =&gt; "$time",
    );
    $c-&gt;model('DonDB')-&gt;resultset('Charge')-&gt;update_or_create(\%row);

    $c-&gt;res-&gt;redirect($c-&gt;uri_for("/list/view/$row{id}"));
}
else {
    my $editer = $c-&gt;model('DonDB')-&gt;resultset('Charge')-&gt;find($edit_id);

    $c-&gt;stash(
    editer =&gt; $editer,
    );
}
}
</code></pre>

<p><a href="https://gist.github.com/3095922">List-edit.tt</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[list-write]]></title>
    <link href="http://rumidier.github.com/blog/2012/07/12/list-write/"/>
    <updated>2012-07-12T13:49:00+09:00</updated>
    <id>http://rumidier.github.com/blog/2012/07/12/list-write</id>
    <content type="html"><![CDATA[<p><a href="https://gist.github.com/3095879">List-write.tt</a>
<a href="https://gist.github.com/3095901">List-write-action</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[list-view]]></title>
    <link href="http://rumidier.github.com/blog/2012/07/12/list-view/"/>
    <updated>2012-07-12T13:41:00+09:00</updated>
    <id>http://rumidier.github.com/blog/2012/07/12/list-view</id>
    <content type="html"><![CDATA[<p><a href="https://gist.github.com/3095846">List-view-action</a>
<a href="https://gist.github.com/3095858">List-view.tt</a></p>
]]></content>
  </entry>
  
</feed>
